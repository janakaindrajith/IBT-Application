using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;
using System.Data.OracleClient;
using System.Configuration;

namespace BranchMIS.IBT
{
    public partial class IBT_MRP_Confirmation : System.Web.UI.Page
    {
        OracleConnection myConnectionUse = new OracleConnection(ConfigurationManager.ConnectionStrings["ORAWF"].ToString());
        private string usrName = "";
        public DataTable dtPageControls = new DataTable();

        protected void Page_Load(object sender, EventArgs e)//-----------------------------------------Page Load Events---------------------------------------------------//
        {
            if (Session["IBT_UserName"] == null)
            {
                string usrValid = "SessionExpired";
                Response.Redirect("~/FAS_Home.aspx?usr=" + usrValid, false);
                return;
            }


            OracleCommand cmd_pageid = myConnectionUse.CreateCommand();
            cmd_pageid.CommandText = "";

            CommonCLS.CommonFunctions clsCom = new CommonCLS.CommonFunctions();
            //usrName = clsCom.getCurentUser();
            usrName = Session["IBT_UserName"].ToString();

            string pageName = (System.Web.VirtualPathUtility.GetFileName(System.Web.HttpContext.Current.Request.Url.AbsolutePath));

            dtPageControls = clsCom.getUserRoleAndPageControls(usrName, pageName);
            Session["PagePermissions"] = dtPageControls;

            bool x = clsCom.getPermissions(usrName, pageName);

            if (x == true)
            {
                if (!IsPostBack)
                {
                    disablePageControls();
                    formControlsAuthentication();
                }
            }
            else
            {
                Response.Redirect("~/FAS_Home.aspx?valid=" + x, false);
                Context.ApplicationInstance.CompleteRequest();
            }
        }

        public void call_error_msg(bool x)//------------------------------------------------------------------System Messeges----------------------------------------------//
        {
            if (x == true)
            {
                this.page_result.Visible = true;
                this.page_result.Style.Clear();
                page_result.Attributes["class"] = "alert alert-success";

                //this.page_result.Style.Add("background-color", "#32CD32");
                //this.page_result.Style.Add("border-color", "#32CD32");
                lblResult.Visible = true;
            }
            else
            {
                this.page_result.Visible = true;
                this.page_result.Style.Clear();
                page_result.Attributes["class"] = "alert alert-danger";

                //this.page_result.Style.Add("background-color", "#FF0000");
                //this.page_result.Style.Add("border-color", "#FF0000");
                lblResult.Visible = true;
                this.lblResult.Style.Add("color", "#ffff");
            }
        }

        protected void cmdMRPConfirmed_Click(object sender, EventArgs e)//-----------------------------MRP Confirmation---------------------------------------------------//
        {
            try
            {
                //janaka 14-07-2017
                CommonCLS.CommonFunctions.IBT_DEPT_DECOMPOSE();//Decompose MCR / MRP / NON MOTOR / MOTOR
                CommonCLS.CommonFunctions.Logger(System.Web.VirtualPathUtility.GetFileName(System.Web.HttpContext.Current.Request.Url.AbsolutePath), System.Reflection.MethodBase.GetCurrentMethod().Name, "----Decomposed Rules Executed---- By: " + usrName, Server.MapPath("~/IBTLogFiles/Log.txt"));


                CommonCLS.MRPMCRDetails cls = new CommonCLS.MRPMCRDetails();
                cls.UpdateMRPMCR("MRP");

                CommonCLS.IBTEmails.EmailAlertCommon(1,null,"");

                CommonCLS.CommonFunctions.Logger(System.Web.VirtualPathUtility.GetFileName(System.Web.HttpContext.Current.Request.Url.AbsolutePath), System.Reflection.MethodBase.GetCurrentMethod().Name, "----MRP Confirmed---- By: " + usrName, Server.MapPath("~/IBTLogFiles/Log.txt"));
                call_error_msg(true);
                lblResult.Text = "Successfully Completed...!";
            }
            catch (Exception ex)
            {
                CommonCLS.CommonFunctions.Logger(System.Web.VirtualPathUtility.GetFileName(System.Web.HttpContext.Current.Request.Url.AbsolutePath), System.Reflection.MethodBase.GetCurrentMethod().Name, ex.Message.ToString() + "---MRP Confirmation Error--- Current User: " + usrName, Server.MapPath("~/IBTLogFiles/Log.txt"));
                call_error_msg(false);
                lblResult.Text = "Error occured...!";
                throw;
            }
        }

        protected void cmdNewConfirmed_Click(object sender, EventArgs e)//-----------------------------NEW BUSINESS Confirmation------------------------------------------//
        {
            try
            {
                CommonCLS.IBTEmails.EmailAlertCommon(2,null,"");
                CommonCLS.CommonFunctions.Logger(System.Web.VirtualPathUtility.GetFileName(System.Web.HttpContext.Current.Request.Url.AbsolutePath), System.Reflection.MethodBase.GetCurrentMethod().Name, "----NEW BUSINESS Confirmed---- By: " + usrName, Server.MapPath("~/IBTLogFiles/Log.txt"));
                call_error_msg(true);
                lblResult.Text = "Successfully Completed...!";
            }
            catch (Exception ex)
            {
                CommonCLS.CommonFunctions.Logger(System.Web.VirtualPathUtility.GetFileName(System.Web.HttpContext.Current.Request.Url.AbsolutePath), System.Reflection.MethodBase.GetCurrentMethod().Name, ex.Message.ToString() + "---New Business Confirmation Error--- Current User: " + usrName, Server.MapPath("~/IBTLogFiles/Log.txt"));
                call_error_msg(false);
                lblResult.Text = "Error occured...!";
                throw;
            }
        }

        protected void cmdRenewalConfirmed_Click(object sender, EventArgs e)//-------------------------RENEWAL Confirmation-----------------------------------------------//
        {
            try
            {
                CommonCLS.IBTEmails.EmailAlertCommon(3,null,"");
                CommonCLS.CommonFunctions.Logger(System.Web.VirtualPathUtility.GetFileName(System.Web.HttpContext.Current.Request.Url.AbsolutePath), System.Reflection.MethodBase.GetCurrentMethod().Name, "----RENEWAL Confirmed---- By: " + usrName, Server.MapPath("~/IBTLogFiles/Log.txt"));
                call_error_msg(true);
                lblResult.Text = "Successfully Completed...!";
            }
            catch (Exception ex)
            {
                CommonCLS.CommonFunctions.Logger(System.Web.VirtualPathUtility.GetFileName(System.Web.HttpContext.Current.Request.Url.AbsolutePath), System.Reflection.MethodBase.GetCurrentMethod().Name, ex.Message.ToString() + "---Renewal Confirmation Error--- Current User: " + usrName, Server.MapPath("~/IBTLogFiles/Log.txt"));
                call_error_msg(false);
                lblResult.Text = "Error occured...!";
                throw;
            }
        }

        protected void formControlsAuthentication()//--------------------------------------------------Form Authentications (Enable User Controls)------------------------//
        {
            DataRow[] result = dtPageControls.Select("page_id =150");

            foreach (DataRow row in result)
            {
                //string pageid = row[0].ToString();
                string field_name = row[1].ToString();

                if (field_name == "MRP_CONFIRMATION")
                {
                    cmdMRPConfirmed.Enabled = true;
                    panel_life.Visible = true;
                    //panel_gi.Visible = true;
                }
                else if (field_name == "NEW_BUSINESS_CONFIRMATION")
                {
                    cmdNewConfirmed.Enabled = true;
                    panel_life.Visible = true;
                    //panel_gi.Visible = true;
                }
                else if (field_name == "RENEWAL_CONFIRMATION")
                {
                    cmdRenewalConfirmed.Enabled = true;
                    panel_life.Visible = true;
                    //panel_gi.Visible = true;
                }
                else if (field_name == "MOTOR_CONFIRMATION")
                {
                    cmdMotorConfirmation.Enabled = true;
                    //panel_life.Visible = true;
                    panel_gi.Visible = true;
                }
                else if (field_name == "NON_MOTOR_CONFIRMATION")
                {
                    cmdNonMotorConfirmation.Enabled = true;
                    //panel_life.Visible = true;
                    panel_gi.Visible = true;
                }
                else
                {
                    panel_life.Visible = false;
                    panel_gi.Visible = false;
                    //disableBatchButtons();
                    return;
                }

                field_name = "";
            }
        }

        protected void disablePageControls()//---------------------------------------------------------Disable Form Controls----------------------------------------------//
        {
            cmdMRPConfirmed.Enabled = false;
            cmdNewConfirmed.Enabled = false;
            cmdRenewalConfirmed.Enabled = false;
            cmdMotorConfirmation.Enabled = false;
            cmdNonMotorConfirmation.Enabled = false;
            panel_life.Visible = false;
            panel_gi.Visible = false;
        }

        protected void cmdMotorConfirmation_Click(object sender, EventArgs e)
        {
            try
            {
                CommonCLS.IBTEmails.EmailAlertCommon(10, null,"");
                CommonCLS.CommonFunctions.Logger(System.Web.VirtualPathUtility.GetFileName(System.Web.HttpContext.Current.Request.Url.AbsolutePath), System.Reflection.MethodBase.GetCurrentMethod().Name, "----NEW BUSINESS Confirmed---- By: " + usrName, Server.MapPath("~/IBTLogFiles/Log.txt"));
                call_error_msg(true);
                lblResult.Text = "Successfully Completed...!";
            }
            catch (Exception ex)
            {
                CommonCLS.CommonFunctions.Logger(System.Web.VirtualPathUtility.GetFileName(System.Web.HttpContext.Current.Request.Url.AbsolutePath), System.Reflection.MethodBase.GetCurrentMethod().Name, ex.Message.ToString() + "---New Business Confirmation Error--- Current User: " + usrName, Server.MapPath("~/IBTLogFiles/Log.txt"));
                call_error_msg(false);
                lblResult.Text = "Error occured...!";
                throw;
            }
        }

        protected void cmdNonMotorConfirmation_Click(object sender, EventArgs e)
        {
            try
            {
                CommonCLS.IBTEmails.EmailAlertCommon(11, null,"");
                CommonCLS.CommonFunctions.Logger(System.Web.VirtualPathUtility.GetFileName(System.Web.HttpContext.Current.Request.Url.AbsolutePath), System.Reflection.MethodBase.GetCurrentMethod().Name, "----NEW BUSINESS Confirmed---- By: " + usrName, Server.MapPath("~/IBTLogFiles/Log.txt"));
                call_error_msg(true);
                lblResult.Text = "Successfully Completed...!";
            }
            catch (Exception ex)
            {
                CommonCLS.CommonFunctions.Logger(System.Web.VirtualPathUtility.GetFileName(System.Web.HttpContext.Current.Request.Url.AbsolutePath), System.Reflection.MethodBase.GetCurrentMethod().Name, ex.Message.ToString() + "---New Business Confirmation Error--- Current User: " + usrName, Server.MapPath("~/IBTLogFiles/Log.txt"));
                call_error_msg(false);
                lblResult.Text = "Error occured...!";
                throw;
            }
        }

        protected void cmdMCRConfirmed_Click(object sender, EventArgs e)
        {
            try
            {
                ////janaka 14-07-2017
                CommonCLS.CommonFunctions.IBT_DEPT_DECOMPOSE();//Decompose MCR / MRP / NON MOTOR / MOTOR
                CommonCLS.CommonFunctions.Logger(System.Web.VirtualPathUtility.GetFileName(System.Web.HttpContext.Current.Request.Url.AbsolutePath), System.Reflection.MethodBase.GetCurrentMethod().Name, "----Decomposed Rules Executed---- By: " + usrName, Server.MapPath("~/IBTLogFiles/Log.txt"));


                CommonCLS.MRPMCRDetails cls = new CommonCLS.MRPMCRDetails();
                cls.UpdateMRPMCR("MCR");

                CommonCLS.IBTEmails.EmailAlertCommon(1, null, "");

                CommonCLS.CommonFunctions.Logger(System.Web.VirtualPathUtility.GetFileName(System.Web.HttpContext.Current.Request.Url.AbsolutePath), System.Reflection.MethodBase.GetCurrentMethod().Name, "----MCR Confirmed---- By: " + usrName, Server.MapPath("~/IBTLogFiles/Log.txt"));
                call_error_msg(true);
                lblResult.Text = "Successfully Completed...!";

            }
            catch (Exception ex)
            {
                CommonCLS.CommonFunctions.Logger(System.Web.VirtualPathUtility.GetFileName(System.Web.HttpContext.Current.Request.Url.AbsolutePath), System.Reflection.MethodBase.GetCurrentMethod().Name, ex.Message.ToString() + "---MCR Confirmation Error--- Current User: " + usrName, Server.MapPath("~/IBTLogFiles/Log.txt"));
                call_error_msg(false);
                lblResult.Text = "Error occured...!";
                throw;
            }
        }

    }
}